{"version":3,"sources":["CoffeePlaces.js","List.js","Select.js","Popup.js","App.js","serviceWorker.js","index.js"],"names":["coffeePlaces","name","type","address","comedian","List","markers","_this","this","list","map","marker","props","selection","react_default","a","createElement","key","onKeyDown","e","itemClick","onClick","className","role","tabIndex","category","listDivs","createList","ref","listRef","Component","Select","aria-labelledby","htmlFor","id","value","onChange","event","onSelection","library","add","faDollarSign","Popup","buttonRef","current","focus","rating","tier","message","imgSpan","price","venue","details","response","bestPhoto","prefix","suffix","path","style","backgroundImage","concat","aria-label","dollarSigns","i","push","react_fontawesome_index_es","aria-hidden","title","icon","close","mapboxgl","accessToken","CLIENT_ID","CLIENT_SECRET","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","markerRef","totalMarkers","CoffeePlaces","length","React","createRef","listItemsRef","buttonEl","window","innerWidth","zoomlevel","state","lng","lat","zoom","open","error","bind","assertThisInitialized","recenterMap","zoomTo","markerClick","rmMenuItemStyle","rmMarkerStyle","closePopup","open_item","setState","flyTo","center","markerObj","dist_lng","dist_lat","_lngLat","venue_name","arguments","undefined","markerEl","eventTarget","target","forEach","index","document","getElementById","classList","toggle","open_marker","querySelector","item_open","childNodes","item","textContent","_this2","_this$state","Map","container","on","console","log","geocodingClient","mbxGeocoding","promises","place","eachPromise","forwardGeocode","query","limit","send","then","feature","body","features","properties","description","catch","Promise","all","Marker","setLngLat","geometry","coordinates","markerData","place_name","vID","alert","_this3","proms","rejected","prom","fetch","json","myJson","venueID","venues","_this4","addTo","remove","popupComp","mObj","src_Popup","n","alertDiv","react","src_Select","src_List","aria-live","reference","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","src_App_0","URL","process","origin","addEventListener","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"8SACaA,EAAe,CACxB,CACEC,KAAM,kBACNC,KAAM,OACNC,QAAS,uCACTC,SAAU,gBAEZ,CACEH,KAAM,mBACNC,KAAM,QACNC,QAAS,yCACTC,SAAU,gBAEZ,CACEH,KAAM,gBACNC,KAAM,aACNC,QAAS,mCACTC,SAAU,iBAEZ,CACEH,KAAM,UACNC,KAAM,aACNC,QAAS,kCACTC,SAAU,gBAEZ,CACEH,KAAM,6BACNC,KAAM,aACNC,QAAS,kDACTC,SAAU,gBAEZ,CACEH,KAAI,YACJC,KAAM,QACNC,QAAS,2CACTC,SAAU,gBAEZ,CACEH,KAAI,eACJC,KAAM,aACNC,QAAS,oCACTC,SAAU,gBAEZ,CACEH,KAAI,iCACJC,KAAM,QACNC,QAAS,6CACTC,SAAU,gBAEZ,CACEH,KAAI,yBACJC,KAAM,OACNC,QAAS,oCACTC,SAAU,0BAEZ,CACEH,KAAI,sBACJC,KAAM,QACNC,QAAS,2CACTC,SAAU,eAEZ,CACEH,KAAI,WACJC,KAAM,aACNC,QAAS,sCACTC,SAAU,eAEZ,CACEH,KAAI,aACJC,KAAM,aACNC,QAAS,mCACTC,SAAU,kBAEZ,CACEH,KAAI,2BACJC,KAAM,OACNC,QAAS,2CACTC,SAAU,mBAEZ,CACEH,KAAI,mBACJC,KAAM,OACNC,QAAS,iCACTC,SAAU,eAEZ,CACEH,KAAI,eACJC,KAAM,QACNC,QAAS,iDACTC,SAAU,yBC9BDC,qLAlDAC,GAAS,IAAAC,EAAAC,KAGZC,EACAH,EAAQI,IAAI,SAACC,GACT,MAA6B,QAAzBJ,EAAKK,MAAMC,UAEPC,EAAAC,EAAAC,cAAA,MAAIC,IAAKN,EAAOV,KACZiB,UAAW,SAACC,GAAD,OAAOZ,EAAKK,MAAMQ,UAAUT,EAAOV,KAAMkB,IACpDE,QAAS,SAACF,GAAD,OAAOZ,EAAKK,MAAMQ,UAAUT,EAAOV,KAAMkB,IAClDG,UAAU,YACVC,KAAK,SACLC,SAAS,KACRb,EAAOV,MAIZM,EAAKK,MAAMC,YAAcF,EAAOc,SAE5BX,EAAAC,EAAAC,cAAA,MAAIC,IAAKN,EAAOV,KACZiB,UAAW,SAACC,GAAD,OAAOZ,EAAKK,MAAMQ,UAAUT,EAAOV,KAAMkB,IACpDE,QAAS,SAACF,GAAD,OAAOZ,EAAKK,MAAMQ,UAAUT,EAAOV,KAAMkB,IAClDG,UAAU,YACVC,KAAK,SACLC,SAAS,KACRb,EAAOV,MAKjBQ,IAEf,OAAOA,mCAIP,IAAIiB,EAAW,GAMf,OAJIA,EADAlB,KAAKI,MAAMN,UAAY,GACZE,KAAKmB,WAAWnB,KAAKI,MAAMN,SAE1BQ,EAAAC,EAAAC,cAAA,MAAIM,UAAU,aAAd,2DAGZR,EAAAC,EAAAC,cAAA,MAAIY,IAAKpB,KAAKI,MAAMiB,QAASP,UAAU,wBAClCI,UAnDEI,aC6BJC,mLA1BF,IAAAxB,EAAAC,KAML,OACIM,EAAAC,EAAAC,cAAA,OAAKM,UAAU,mBAAmBU,kBAAgB,eAC9ClB,EAAAC,EAAAC,cAAA,SAAOiB,QAAQ,eAAf,6BAC8BnB,EAAAC,EAAAC,cAAA,QAAMkB,GAAG,SAAT,qCAE9BpB,EAAAC,EAAAC,cAAA,UACIkB,GAAG,cACHC,MAAO3B,KAAKI,MAAMC,UAClBuB,SAAU,SAACC,GAAD,OAAW9B,EAAKK,MAAM0B,YAAYD,KAZrC,CACf,MAAO,OAAQ,QAAS,cAYJ3B,IAAI,SAACe,GACb,OACIX,EAAAC,EAAAC,cAAA,UAAQC,IAAKQ,EAAUU,MAAOV,GAAWA,cAnBhDK,oCCErBS,IAAQC,IAAIC,SAoFGC,8LA9EPlC,KAAKI,MAAM+B,UAAUC,QAAQC,yCAGxB,IAAAtC,EAAAC,KAEDsC,EAAS,KACTC,EAAO,KACPC,EAAU,KACVC,EAAU,GACVC,EAAQ,GAEZ,GAAiC,KAA7B1C,KAAKI,MAAMuC,MAAMC,QAAgB,CASjC,GANsD,MAAlD5C,KAAKI,MAAMuC,MAAMC,QAAQC,SAASF,MAAML,SAExCA,EAAStC,KAAKI,MAAMuC,MAAMC,QAAQC,SAASF,MAAML,QAII,MAArDtC,KAAKI,MAAMuC,MAAMC,QAAQC,SAASF,MAAMG,UAAmB,CAE3D,IAAIC,EAAS/C,KAAKI,MAAMuC,MAAMC,QAAQC,SAASF,MAAMG,UAAUC,OAC3DC,EAAShD,KAAKI,MAAMuC,MAAMC,QAAQC,SAASF,MAAMG,UAAUE,OAC/D,GAAc,MAAVD,GAA4B,MAAVC,EAAgB,CAClC,IAAIC,EAAOF,EAAS,UAAYC,EAChCP,EACInC,EAAAC,EAAAC,cAAA,QAAMM,UAAU,YAAYoC,MAAO,CAAEC,gBAAe,OAAAC,OAASH,EAAT,MAAoBlC,KAAK,MAAMsC,aAAYrD,KAAKI,MAAMuC,MAAMlD,QAM5H,GAAqD,MAAjDO,KAAKI,MAAMuC,MAAMC,QAAQC,SAASF,MAAMD,QAExCH,EAAOvC,KAAKI,MAAMuC,MAAMC,QAAQC,SAASF,MAAMD,MAAMH,KACrDC,EAAUxC,KAAKI,MAAMuC,MAAMC,QAAQC,SAASF,MAAMD,MAAMF,QAC5C,MAARD,GAA2B,MAAXC,GAAiB,CAEjC,IADA,IAAIc,EAAc,GACTC,EAAI,EAAGA,EAAIhB,EAAMgB,IACtBD,EAAYE,KACRlD,EAAAC,EAAAC,cAACiD,EAAA,EAAD,CAAiBC,eAAA,EAAYC,MAAM,cAAclD,IAAK8C,EAAGK,KAAK,iBAGtElB,EACIpC,EAAAC,EAAAC,cAAA,OAAKM,UAAU,SACVwC,EACDhD,EAAAC,EAAAC,cAAA,QAAMM,UAAU,WAAhB,wBAAgD0B,KAQpE,OACIlC,EAAAC,EAAAC,cAAA,WAASM,UAAU,YACd2B,EACDnC,EAAAC,EAAAC,cAAA,OAAKM,UAAU,iBACXR,EAAAC,EAAAC,cAAA,OAAKM,UAAU,cACXR,EAAAC,EAAAC,cAAA,OAAKM,UAAU,YAAWR,EAAAC,EAAAC,cAAA,QAAMM,UAAU,YAAhB,YAA1B,yBAA0FR,EAAAC,EAAAC,cAAA,QAAMM,UAAU,YAAYd,KAAKI,MAAMuC,MAAM/C,WACvIU,EAAAC,EAAAC,cAAA,KAAGM,UAAU,cAAcd,KAAKI,MAAMuC,MAAM1B,UACjC,MAAVqB,EACGhC,EAAAC,EAAAC,cAAA,OAAKM,UAAU,UACXR,EAAAC,EAAAC,cAAA,OAAKkD,eAAA,EAAYC,MAAM,UAAUrB,EAAjC,OACAhC,EAAAC,EAAAC,cAAA,QAAMM,UAAU,WAAhB,mBAA2CwB,EAA3C,gBAEJ,GACHI,EACDpC,EAAAC,EAAAC,cAAA,WAASM,UAAU,iBAAiBd,KAAKI,MAAMuC,MAAMhD,UAEzDW,EAAAC,EAAAC,cAAA,UAAQQ,SAAS,IAAII,IAAKpB,KAAKI,MAAM+B,UAAWT,GAAG,cAAchB,UAAW,SAACC,GAAD,OAAOZ,EAAKK,MAAMyD,MAAMlD,IAAIE,QAAS,SAACF,GAAD,OAAOZ,EAAKK,MAAMyD,MAAMlD,IAAI0C,aAAW,SAAxJ,cA1EA/B,aCCpBwC,IAASC,YAAc,2FAMvB,IAAMC,EAAY,mDACZC,EAAgB,mDAkcPC,cA7bb,SAAAA,EAAY9D,GAAO,IAAAL,EAAAoE,OAAAC,EAAA,EAAAD,CAAAnE,KAAAkE,IACjBnE,EAAAoE,OAAAE,EAAA,EAAAF,CAAAnE,KAAAmE,OAAAG,EAAA,EAAAH,CAAAD,GAAAK,KAAAvE,KAAMI,KACDoE,UAAY,GACjBzE,EAAK0E,aAAeC,EAA0BC,OAE9C,IAAK,IAAIpB,EAAI,EAAGA,EAAIxD,EAAK0E,aAAclB,IACrCxD,EAAKyE,UAAUhB,KAAKoB,IAAMC,aANX,OASjB9E,EAAK+E,aAAeF,IAAMC,YAC1B9E,EAAKgF,SAAWH,IAAMC,YAElBG,OAAOC,WAAa,IACtBlF,EAAKmF,UAAY,IACRF,OAAOC,WAAa,KAC7BlF,EAAKmF,UAAY,EAEjBnF,EAAKmF,UAAY,EAEnBnF,EAAKoF,MAAQ,CACXC,KAAM,WACNC,IAAK,WACLC,KAAMvF,EAAKmF,UACXpF,QAAS,GACTO,UAAW,MACXkF,KAAM,GACN3C,QAAS,GACT4C,OAAO,GAGTzF,EAAKa,UAAYb,EAAKa,UAAU6E,KAAftB,OAAAuB,EAAA,EAAAvB,QAAAuB,EAAA,EAAAvB,CAAApE,KACjBA,EAAK+B,YAAc/B,EAAK+B,YAAY2D,KAAjBtB,OAAAuB,EAAA,EAAAvB,QAAAuB,EAAA,EAAAvB,CAAApE,KACnBA,EAAK4F,YAAc5F,EAAK4F,YAAYF,KAAjBtB,OAAAuB,EAAA,EAAAvB,QAAAuB,EAAA,EAAAvB,CAAApE,KACnBA,EAAK6F,OAAS7F,EAAK6F,OAAOH,KAAZtB,OAAAuB,EAAA,EAAAvB,QAAAuB,EAAA,EAAAvB,CAAApE,KACdA,EAAK8F,YAAc9F,EAAK8F,YAAYJ,KAAjBtB,OAAAuB,EAAA,EAAAvB,QAAAuB,EAAA,EAAAvB,CAAApE,KACnBA,EAAK+F,gBAAkB/F,EAAK+F,gBAAgBL,KAArBtB,OAAAuB,EAAA,EAAAvB,QAAAuB,EAAA,EAAAvB,CAAApE,KACvBA,EAAKgG,cAAgBhG,EAAKgG,cAAcN,KAAnBtB,OAAAuB,EAAA,EAAAvB,QAAAuB,EAAA,EAAAvB,CAAApE,KACrBA,EAAKiG,WAAajG,EAAKiG,WAAWP,KAAhBtB,OAAAuB,EAAA,EAAAvB,QAAAuB,EAAA,EAAAvB,CAAApE,KArCDA,0EA4CR8B,GACT,GAAmB,UAAfA,EAAMnC,MAAmC,UAAdmC,EAAMpB,KAAiC,MAAdoB,EAAMpB,KAA6B,aAAdoB,EAAMpB,KAAoC,QAAdoB,EAAMpB,IAAgB,CAE7HT,KAAK+F,gBACL,IAAME,EAAYjG,KAAK8F,kBAEJ,YAAfjE,EAAMnC,MACRuG,EAAU5D,QAGZrC,KAAKkG,SAAS,CACZX,KAAM,4CASV,IAAIL,EAAY,EACZF,OAAOC,WAAa,IACtBC,EAAY,IACHF,OAAOC,WAAa,OAC7BC,EAAY,GAGdlF,KAAKE,IAAIiG,MAAM,CACbC,OAAQ,CACNpG,KAAKmF,MAAMC,IACXpF,KAAKmF,MAAME,KAEbC,KAAMJ,IAERlF,KAAKkG,SAAS,CACZX,KAAM,oCASHc,GACL,IAAIC,GAAY,IACZC,EAAW,EACXvB,OAAOC,WAAa,MACtBqB,GAAY,IACZC,GAAY,KAEdvG,KAAKE,IAAIiG,MAAM,CACbC,OAAQ,CACNC,EAAUlG,OAAOqG,QAAQpB,IAAMkB,EAC/BD,EAAUlG,OAAOqG,QAAQnB,IAAMkB,GAEjCjB,KAAM,OAKRtF,KAAKkG,SAAS,CACZX,KAAMc,0CAU+B,IAA7BI,EAA6BC,UAAA/B,OAAA,QAAAgC,IAAAD,UAAA,GAAAA,UAAA,GAAhB,GAAI7E,EAAY6E,UAAA/B,OAAA,QAAAgC,IAAAD,UAAA,GAAAA,UAAA,GAAJ,GAEnC1G,KAAK+F,gBAEL,IAAIM,EAAY,GACZO,EAAW,GAEf,GAAc,KAAV/E,EAAc,CAEhB,IAAIgF,EAAchF,EAAMiF,OACxBF,EAAWC,EACXR,EAAYrG,KAAKmF,MAAMrF,QAAQ+G,EAAYnF,IAC3C1B,KAAKY,UAAUyF,EAAU5G,KAAM,SAG/BO,KAAKmF,MAAMrF,QAAQiH,QAAQ,SAAC5G,EAAQ6G,GAC9B7G,EAAOV,OAASgH,IAClBJ,EAAYlG,EACZyG,EAAWK,SAASC,eAAeF,MAKzCJ,EAASO,UAAUC,OAAO,eAE1BpH,KAAK4F,OAAOS,2CAOZ,IAAMgB,EAAcJ,SAASK,cAAc,gBACxB,MAAfD,GACFA,EAAYF,UAAUC,OAAO,yDAS/B,IAAIG,EAAYN,SAASK,cAAc,SAIvC,OAHiB,MAAbC,GACFA,EAAUJ,UAAUC,OAAO,QAEtBG,oCASCd,GAAwB,IAAZ5E,EAAY6E,UAAA/B,OAAA,QAAAgC,IAAAD,UAAA,GAAAA,UAAA,GAAJ,GAK5B,GAHA1G,KAAK8F,kBAGc,UAAfjE,EAAMnC,MAAkC,MAAdmC,EAAMpB,KAA6B,aAAdoB,EAAMpB,IACrCoB,EAAMiF,OACZK,UAAUC,OAAO,QAC7BpH,KAAK6F,YAAYY,EAAY,SACxB,GAAc,KAAV5E,EAAc,CAEvB,IAAM5B,EAAOD,KAAK8E,aAAa1C,QAAQoF,WACvC,IAAK,IAAIC,KAAQxH,EACXA,EAAKwH,GAAMC,cAAgBjB,GAC7BxG,EAAKwH,GAAMN,UAAUC,OAAO,6CAUxBvF,GACV7B,KAAK+F,gBACL/F,KAAK8F,kBACL9F,KAAKkG,SAAS,CACZ7F,UAAWwB,EAAMiF,OAAOnF,QAE1B3B,KAAK2F,0DAUa,IAAAgC,EAAA3H,KAAA4H,EAES5H,KAAKmF,MAAxBC,EAFUwC,EAEVxC,IAAKC,EAFKuC,EAELvC,IAAKC,EAFAsC,EAEAtC,KAElBtF,KAAKE,IAAM,IAAI4D,IAAS+D,IAAI,CAC1BC,UAAW,MACX5E,MAAO,kCACPkD,OAAQ,CAAChB,EAAKC,GACdC,SAEDyC,GAAG,OAAQ,WACRJ,EAAKzB,SAAS,CACZV,OAAO,MAGZuC,GAAG,QAAS,SAACvC,GACZwC,QAAQC,IAAIzC,GACZmC,EAAKzB,SAAS,CACZV,OAAO,MAIX,IAAM0C,EAAkBC,IAAa,CAAEpE,YAAaD,IAASC,cAEzDqE,EAAW,GAEf1D,EAA0BqC,QAAQ,SAACsB,GAEjC,IAAIC,EACFJ,EAAgBK,eAAe,CAC7BC,MAAOH,EAAM1I,QACb8I,MAAO,IAENC,OACAC,KAAK,SAAC9F,GACL,GAAgB,MAAZA,GAAsC,MAAlBA,EAAS2C,MAAe,CAE9C,IAAMoD,EAAU/F,EAASgG,KAAKC,SAAS,GAOvC,OALAF,EAAQG,WAAa,CACnBpF,MAAO0E,EAAM5I,KACbuJ,YAAaX,EAAM3I,KACnBE,SAAUyI,EAAMzI,UAEXgJ,EAEP,OAAOP,EAAM5I,OAGhBwJ,MAAM,SAACzD,GAEN,OADAwC,QAAQC,IAAIzC,GACL6C,EAAM5I,OAInB2I,EAAS5E,KAAK8E,KAGhB,IAAIxI,EAAU,GAEdoJ,QAAQC,IAAIf,GAAUO,KAAK,SAACP,GAC1B,IAAI7E,EAAI,EAER6E,EAASrB,QAAQ,SAAC6B,GAEhB,GAAuB,kBAAZA,EAAsB,CAC/B,IAAIzI,EAAS,IAAI2D,IAASsF,OAAOzB,EAAKnD,UAAUjB,GAAGnB,SAClDiH,UAAUT,EAAQU,SAASC,aAExBC,EAAa,CACf/J,KAAMmJ,EAAQG,WAAWpF,MACzB1C,SAAU2H,EAAQG,WAAWC,YAC7BrJ,QAASiJ,EAAQa,WACjB7J,SAAUgJ,EAAQG,WAAWnJ,SAC7BO,OAAQA,EACRuJ,IAAK,GACL9G,QAAS,IAGX9C,EAAQ0D,KAAKgG,QAGbG,MAAK,wCAAAvG,OAAyCwF,EAAzC,MAGPrF,MAGFoE,EAAKzB,SAAS,CACZpG,QAASA,mDAWM,IAAA8J,EAAA5J,KACnB,GAA2B,KAAvBA,KAAKmF,MAAMvC,QAAgB,CAE7B5C,KAAKkG,SAAS,CACZtD,QAAS,aAEXoF,QAAQC,IAAI,YACZ,IAAI4B,EAAQ,GACR/J,EAAUE,KAAKmF,MAAMrF,QACrBgK,EAAW,EACfhK,EAAQiH,QAAQ,SAAC5G,GAEf,IAAI4J,EACFC,MAAK,yDAAA5G,OAA0DY,EAA1D,mBAAAZ,OAAqFa,EAArF,2BAAAb,OAA4HjD,EAAOA,OAAOqG,QAAQnB,IAAlJ,KAAAjC,OAAyJjD,EAAOA,OAAOqG,QAAQpB,IAA/K,WAAAhC,OAA4LjD,EAAOV,OACrMkJ,KAAK,SAAC9F,GACL,OAAOA,EAASoH,SAEjBtB,KAAK,SAACuB,GAEL,IAAIC,EAAU,KAOd,OANAD,EAAOrH,SAASuH,OAAOlK,IAAI,SAACyC,GAI1B,OAHIA,EAAMlD,OAASU,EAAOV,OACxB0K,EAAUxH,EAAMjB,IAEXyI,IAEFA,IAERlB,MAAM,SAACzD,GAGN,OAFAwC,QAAQC,IAAIzC,GACZsE,GAAY,EACL,OAGbD,EAAMrG,KAAKuG,KAGbb,QAAQC,IAAIU,GAAOlB,KAAK,SAACkB,GACvB/J,EAAQiH,QAAQ,SAAC5G,EAAQ6G,GAGH,MAAhB6C,EAAM7C,IACRgD,MAAK,wCAAA5G,OAAyCyG,EAAM7C,GAA/C,eAAA5D,OAAmEY,EAAnE,mBAAAZ,OAA8Fa,EAA9F,gBACJ0E,KAAK,SAAC9F,GACL,OAAOA,EAASoH,SAEjBtB,KAAK,SAACuB,GACL/J,EAAOyC,QAAUsH,MAKvBN,EAAK1D,SAAS,CACZpG,QAASA,IAGX8J,EAAK1D,SAAS,CACZtD,QAAS,YAEXoF,QAAQC,IAAI,WAER6B,EAAW,IAEXA,EAAQ,GAAA1G,OAAM0G,EADC,IAAbA,EACM,SAEA,WAEVH,MAAK,2CAAAvG,OAA4C0G,EAA5C,2CAMJ,IAAAO,EAAArK,KAEPA,KAAKmF,MAAMrF,QAAQiH,QAAQ,SAACV,GACG,QAAzBgE,EAAKlF,MAAM9E,UACTgK,EAAKlF,MAAM9E,YAAcgG,EAAUpF,SACrCoF,EAAUlG,OAAOmK,MAAMD,EAAKnK,KAE5BmG,EAAUlG,OAAOoK,SAGnBlE,EAAUlG,OAAOmK,MAAMD,EAAKnK,OAIhC,IAAIsK,EAAY,GAChB,GAAwB,KAApBxK,KAAKmF,MAAMI,KAAa,CAC1B,IAAIkF,EAAOzK,KAAKmF,MAAMI,KACtBiF,EACElK,EAAAC,EAAAC,cAACkK,EAAD,CAAO5J,UAAU,WAAW6B,MAAO8H,EAAMtI,UAAWnC,KAAK+E,SAAUlB,MAAO7D,KAAKgG,aAInF,IAAI2E,EAAI,EAGJC,EAAW,GAKf,OAJI5K,KAAKmF,MAAMK,QACboF,EAAYtK,EAAAC,EAAAC,cAAA,OAAKM,UAAU,SAAf,wCAIZR,EAAAC,EAAAC,cAACqK,EAAA,SAAD,KACGD,EACDtK,EAAAC,EAAAC,cAAA,WAASO,KAAK,eAAesC,aAAW,4BAA4B3B,GAAG,QAEvEpB,EAAAC,EAAAC,cAAA,WAAS6C,aAAW,4BAA4BvC,UAAU,gBACxDR,EAAAC,EAAAC,cAACsK,EAAD,CAAQzK,UAAWL,KAAKmF,MAAM9E,UAAWyB,YAAa9B,KAAK8B,cAC3DxB,EAAAC,EAAAC,cAACuK,EAAD,CAAM1J,QAASrB,KAAK8E,aAAczE,UAAWL,KAAKmF,MAAM9E,UAAWO,UAAWZ,KAAKY,UAAWd,QAAuC,IAA9BE,KAAKmF,MAAMrF,QAAQ6E,OAAe3E,KAAKmF,MAAMrF,QAAU,KAC9JQ,EAAAC,EAAAC,cAAA,UAAQM,UAAU,YAChBR,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,0GAGPF,EAAAC,EAAAC,cAAA,WAASkB,GAAG,QAAQsJ,YAAU,SAAS3H,aAAW,iBAC/CmH,GAIDxK,KAAKwE,UAAUtE,IAAI,SAAC+K,GAElB,OADAN,IAEErK,EAAAC,EAAAC,cAAA,OAAKM,UAAU,SAASY,GAAIiJ,EAAI,EAAGlK,IAAKkK,EAAGvJ,IAAK6J,EAAWpK,QAAS,SAACF,GAAD,OAAO0J,EAAKxE,YAAY,GAAIlF,gBArb5FW,aCRZ4J,EAAcC,QACW,cAA7BnG,OAAOoG,SAASC,UAEe,UAA7BrG,OAAOoG,SAASC,UAEhBrG,OAAOoG,SAASC,SAASC,MACvB,2DAsCN,SAASC,EAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACT7C,KAAK,SAAAkD,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiB5G,QACfuG,UAAUC,cAAcO,YAI1BlE,QAAQC,IACN,gHAKEwD,GAAUA,EAAOU,UACnBV,EAAOU,SAASN,KAMlB7D,QAAQC,IAAI,sCAGRwD,GAAUA,EAAOW,WACnBX,EAAOW,UAAUP,SAO5B5C,MAAM,SAAAzD,GACLwC,QAAQxC,MAAM,4CAA6CA,KCvFjE6G,IAASC,OAAOhM,EAAAC,EAAAC,cAAC+L,EAAD,MAAStF,SAASC,eAAe,SDgB1C,SAAkBuE,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIc,IAAIC,cAAwBzH,OAAOoG,UAC3CsB,SAAW1H,OAAOoG,SAASsB,OAIvC,OAGF1H,OAAO2H,iBAAiB,OAAQ,WAC9B,IAAMnB,EAAK,GAAApI,OAAMqJ,cAAN,sBAEPvB,GA6DV,SAAiCM,EAAOC,GAEtCzB,MAAMwB,GACH7C,KAAK,SAAA9F,GAGkB,MAApBA,EAAS+J,SACuD,IAAhE/J,EAASgK,QAAQC,IAAI,gBAAgBC,QAAQ,cAG7CrB,UAAUC,cAAcqB,MAAMrE,KAAK,SAAAkD,GACjCA,EAAaoB,aAAatE,KAAK,WAC7B3D,OAAOoG,SAAS8B,aAKpB3B,EAAgBC,EAAOC,KAG1BxC,MAAM,WACLjB,QAAQC,IACN,iEAEF0B,MAAM,mEAnFJwD,CAAwB3B,EAAOC,GAI/BC,UAAUC,cAAcqB,MAAMrE,KAAK,WACjCX,QAAQC,IACN,+GAMJsD,EAAgBC,EAAOC,MCvC/BE","file":"static/js/main.9c4bdce8.chunk.js","sourcesContent":["// coffee places\nexport const coffeePlaces = [\n    {\n      name: 'Madman Espresso',\n      type: 'Cafe',\n      address: '54 University Pl, New York, NY 10003',\n      comedian: 'Alec Baldwin'\n    },\n    {\n      name: 'Massapequa Diner',\n      type: 'Diner',\n      address: '4420 Sunrise Hwy, Massapequa, NY 11758',\n      comedian: 'Alec Baldwin'\n    },\n    {\n      name: 'Via Quadronno',\n      type: 'Restaurant',\n      address: '25 E 73rd St, New York, NY 10021',\n      comedian: 'Kate McKinnon'\n    },\n    {\n      name: 'Capizzi',\n      type: 'Restaurant',\n      address: '547 9th Ave, New York, NY 10018',\n      comedian: 'John Mulaney'\n    },\n    {\n      name: 'Hastings Center Restaurant',\n      type: 'Restaurant',\n      address: '540 Warburton Ave, Hastings-On-Hudson, NY 10706',\n      comedian: 'Hasan Minhaj'\n    },\n    {\n      name: `Raymond's`,\n      type: 'Diner',\n      address: '101 E Ridgewood Ave, Ridgewood, NJ 07450',\n      comedian: 'Tracy Morgan'\n    },\n    {\n      name: `2nd Ave Deli`,\n      type: 'Restaurant',\n      address: '162 E 33rd St, New York, NY 10016',\n      comedian: 'Jim Gaffigan'\n    },\n    {\n      name: `Pleasantville Diner Restaurant`,\n      type: 'Diner',\n      address: '10 Memorial Plaza, Pleasantville, NY 10570',\n      comedian: 'Steve Martin'\n    },\n    {\n      name: `The Butcher's Daughter`,\n      type: 'Cafe',\n      address: '581 Hudson St, New York, NY 10014',\n      comedian: 'Cedric The Entertainer'\n    },\n    {\n      name: `Junior's Restaurant`,\n      type: 'Diner',\n      address: '386 Flatbush Ave Ext, Brooklyn, NY 11201',\n      comedian: 'Lewis Black'\n    },\n    {\n      name: `Allswell`,\n      type: 'Restaurant',\n      address: '124 Bedford Ave, Brooklyn, NY 11211',\n      comedian: 'John Oliver'\n    },\n    {\n      name: `Monkey Bar`,\n      type: 'Restaurant',\n      address: '60 E 54th St, New York, NY 10022',\n      comedian: 'Lorne Michaels'\n    },\n    {\n      name: `Bluestone Coffee Company`,\n      type: 'Cafe',\n      address: '123 Watchung Ave #2, Montclair, NJ 07043',\n      comedian: 'Stephen Colbert'\n    },\n    {\n      name: `One Girl Cookies`,\n      type: 'Cafe',\n      address: '33 Main St, Brooklyn, NY 11201',\n      comedian: 'Trevor Noah'\n    },\n    {\n      name: `Colony Diner`,\n      type: 'Diner',\n      address: '2019 Hempstead Turnpike, East Meadow, NY 11554',\n      comedian: 'Sarah Jessica Parker'\n    }\n  \n  ]","import React, { Component } from 'react';\nimport './App.css';\n\nclass List extends Component {\n\n    /**\n    * Creates an unordered list of interactive venue names from an array of marker objects\n    * @param {array} markers\n    * uses props to determine filtering\n    */\n    createList(markers) {\n        // create a list item for each venue if 'All' is selected\n        // otherwise, create a list item for each venue with a category matching the user's selection\n        let list =\n            markers.map((marker) => {\n                if (this.props.selection === 'All') {\n                    return (\n                        <li key={marker.name}\n                            onKeyDown={(e) => this.props.itemClick(marker.name, e)}\n                            onClick={(e) => this.props.itemClick(marker.name, e)}\n                            className='list-item'\n                            role=\"button\"\n                            tabIndex=\"0\">\n                            {marker.name}\n                        </li>\n                    )\n                } else {\n                    if (this.props.selection === marker.category) {\n                        return (\n                            <li key={marker.name}\n                                onKeyDown={(e) => this.props.itemClick(marker.name, e)}\n                                onClick={(e) => this.props.itemClick(marker.name, e)}\n                                className='list-item'\n                                role=\"button\"\n                                tabIndex=\"0\">\n                                {marker.name}\n                            </li>\n                        )\n                    }\n                }\n                return list;\n            })\n        return list;\n    }\n\n    render() {\n        let listDivs = '';\n        if (this.props.markers !== []) {\n            listDivs = this.createList(this.props.markers);\n        } else {\n            listDivs = (<li className=\"error-msg\">There was a problem loading venue data. Try refreshing.</li>)\n        }\n        return (\n            <ul ref={this.props.listRef} className='menu-items-container'>\n                {listDivs}\n            </ul>\n        )\n    }\n}\n\nexport default List;","import React, { Component } from 'react';\nimport './App.css';\n\n// Select menu for filtering list of venues by category\nclass Select extends Component {\n\n    render() {\n\n        const categories = [\n            'All', 'Cafe', 'Diner', 'Restaurant'\n        ]\n\n        return (\n            <nav className='select-container' aria-labelledby=\"filter-list\">\n                <label htmlFor='filter-list'>\n                    Venues visited in the show<span id='title'>Comedians in Cars Getting Coffee</span>\n                </label>\n                <select\n                    id=\"filter-list\"\n                    value={this.props.selection}\n                    onChange={(event) => this.props.onSelection(event)}>\n                    {categories.map((category) => {\n                        return (\n                            <option key={category} value={category}>{category}</option>\n                        )\n                    })}\n                </select>\n            </nav>\n        )\n    }\n}\n\nexport default Select;","import React, { Component } from 'react';\nimport './App.css';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faDollarSign } from '@fortawesome/free-solid-svg-icons';\n\nlibrary.add(faDollarSign);\n\n// Popup for venue displaying venue details\nclass Popup extends Component {\n\n    componentDidMount() {\n        this.props.buttonRef.current.focus();\n    }\n\n    render() {\n        // initialize venue detail variables\n        let rating = null;\n        let tier = null;\n        let message = null;\n        let imgSpan = '';\n        let price = '';\n        \n        if (this.props.venue.details !== '') {\n            \n            // check for rating\n            if (this.props.venue.details.response.venue.rating != null){\n                // set rating\n                rating = this.props.venue.details.response.venue.rating;\n            }\n\n            // check for bestPhoto\n            if (this.props.venue.details.response.venue.bestPhoto != null) {\n                // create DOM el for venue img\n                let prefix = this.props.venue.details.response.venue.bestPhoto.prefix;\n                let suffix = this.props.venue.details.response.venue.bestPhoto.suffix;\n                if (prefix != null && suffix != null) {\n                    let path = prefix + '300x300' + suffix;\n                    imgSpan = (\n                        <span className='popup-img' style={{ backgroundImage: `url(${path})` }} role='img' aria-label={this.props.venue.name}></span>\n                    )\n                }\n            }\n            \n            // check for price\n            if (this.props.venue.details.response.venue.price != null) {\n                // create DOM el for price\n                tier = this.props.venue.details.response.venue.price.tier;\n                message = this.props.venue.details.response.venue.price.message;\n                if (tier != null && message != null) {\n                    let dollarSigns = [];\n                    for (let i = 0; i < tier; i++) {\n                        dollarSigns.push(\n                            <FontAwesomeIcon aria-hidden title='Venue price' key={i} icon='dollar-sign' />\n                        )\n                    }\n                    price = (\n                        <div className='price'>\n                            {dollarSigns}\n                            <span className='sr-only'>Venue price point is {message}</span>\n                        </div>\n                    )\n                }\n            } \n            \n        }\n\n        return (\n            <article className='my-popup'>\n                {imgSpan}\n                <div className='popup-overlay'>\n                    <div className='popup-text'>\n                        <div className='overview'><span className='comedian'>Seinfeld</span> had coffee here with <span className='comedian'>{this.props.venue.comedian}</span></div>\n                        <p className='venue-type'>{this.props.venue.category}</p>\n                        {rating != null ? (\n                            <div className='rating'>\n                                <div aria-hidden title='rating'>{rating}/10</div>\n                                <span className='sr-only'>Venue rating is {rating} out of 10.</span>\n                            </div>\n                        ) : ''}\n                        {price}\n                        <address className='venue-details'>{this.props.venue.address}</address>\n                    </div>\n                    <button tabIndex='0' ref={this.props.buttonRef} id=\"close-popup\" onKeyDown={(e) => this.props.close(e)} onClick={(e) => this.props.close(e)} aria-label=\"close\">X</button>\n                </div>\n            </article>\n        )\n    }\n}\n\nexport default Popup;\n","import React, { Component } from 'react';\nimport { Fragment } from 'react';\nimport './App.css';\nimport mapboxgl from 'mapbox-gl';\nimport mbxGeocoding from '@mapbox/mapbox-sdk/services/geocoding';\nimport * as CoffeePlaces from './CoffeePlaces';\nimport List from './List';\nimport Select from './Select';\nimport Popup from './Popup';\n\nmapboxgl.accessToken = 'pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpejY4M29iazA2Z2gycXA4N2pmbDZmangifQ.-g_vE53SD2WrJ6tFX7QHmA';\n\n// Foursquare IDs for this app\n//\n// TODO: After review, reset Client Secret in Foursquare and push to GitHub with empty Client Secret\n//\nconst CLIENT_ID = 'PPYFQDE4ES3RAZHYQRKXI0RPWURQ1RPIAIU3VHENMNSKEX1S';\nconst CLIENT_SECRET = 'XAWDVQKUAC1OBT5JUSALYUJTN34FA3H5YZPTFN3145OUM5CL';\n\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.markerRef = [];\n    this.totalMarkers = CoffeePlaces.coffeePlaces.length;\n    // create an array of refs for each marker from total number of markers expected\n    for (let i = 0; i < this.totalMarkers; i++) {\n      this.markerRef.push(React.createRef());\n    }\n    // refs for list items and close popup button\n    this.listItemsRef = React.createRef();\n    this.buttonEl = React.createRef();\n    // set zoom level according to screen width\n    if (window.innerWidth < 450) {\n      this.zoomlevel = 7.5;\n    } else if (window.innerWidth > 1070){\n      this.zoomlevel = 9;\n    } else {\n      this.zoomlevel = 8;\n    }\n    this.state = {\n      lng: -73.8226071,\n      lat: 40.8786204,\n      zoom: this.zoomlevel,\n      markers: [],\n      selection: 'All',\n      open: '',\n      details: '',\n      error: false\n    };\n\n    this.itemClick = this.itemClick.bind(this);\n    this.onSelection = this.onSelection.bind(this);\n    this.recenterMap = this.recenterMap.bind(this);\n    this.zoomTo = this.zoomTo.bind(this);\n    this.markerClick = this.markerClick.bind(this);\n    this.rmMenuItemStyle = this.rmMenuItemStyle.bind(this);\n    this.rmMarkerStyle = this.rmMarkerStyle.bind(this);\n    this.closePopup = this.closePopup.bind(this);\n  }\n\n  /**\n   * Closes popup and removes 'open' styling\n   * @param event - mouse or keyboard event\n   */\n  closePopup(event) {\n    if (event.type === 'click' || (event.key === 'Enter' || event.key === ' ' || event.key === 'Spacebar' || event.key === 'Tab')) {\n      // remove any 'open' styles\n      this.rmMarkerStyle();\n      const open_item = this.rmMenuItemStyle();\n      // for keyboard users, return focus back to list item element previously opened\n      if (event.type === 'keydown') {\n        open_item.focus();\n      }\n      // empty any marker info from 'open' state \n      this.setState({\n        open: ''\n      })\n    }\n  }\n\n  /**\n   * Recenters the map and resets zoom level to default\n   */\n  recenterMap() {\n    let zoomlevel = 8;\n    if (window.innerWidth < 450) {\n      zoomlevel = 7.5;\n    } else if (window.innerWidth > 1070){\n      zoomlevel = 9;\n    }\n    // Mapbox flyTo method\n    this.map.flyTo({\n      center: [\n        this.state.lng,\n        this.state.lat\n      ],\n      zoom: zoomlevel\n    })\n    this.setState({\n      open: ''\n    })\n  }\n\n  /**\n   * Zooms in and center map to marker location using Mapbox map object's flyTo method\n   * @param {obj} markerObj containing marker instance\n   * \n   */\n  zoomTo(markerObj) {\n    let dist_lng = -0.04;\n    let dist_lat = 0;\n    if (window.innerWidth > 600) {\n      dist_lng = -0.03;\n      dist_lat = -0.01;\n    }\n    this.map.flyTo({\n      center: [\n        markerObj.marker._lngLat.lng + dist_lng,\n        markerObj.marker._lngLat.lat + dist_lat\n      ],\n      zoom: 10.5\n      //speed: 1.2,\n      //curve: 2\n    })\n    // update open state with marker info\n    this.setState({\n      open: markerObj\n    })\n  }\n\n\n  /**\n   * Handles map marker click and simulates menu item click\n   * @param {string} venue_name - Empty by default, and remains empty unless the click was simulated.\n   * @param event - Empty by default to allow for a simulated click event.\n   */\n  markerClick(venue_name = '', event = '') {\n    // remove any already 'open' marker styles\n    this.rmMarkerStyle();\n \n    let markerObj = '';\n    let markerEl = '';\n    // if the marker was actually clicked, simulate its corresponding menu item click\n    if (event !== '') {\n      // store marker object for marker at index matching DOM element's id\n      let eventTarget = event.target;\n      markerEl = eventTarget;\n      markerObj = this.state.markers[eventTarget.id];\n      this.itemClick(markerObj.name, '');\n    } else {\n      // otherwise, use the venue name to locate the marker in state, and use index matching the marker's DOM element ID\n      this.state.markers.forEach((marker, index) => {\n        if (marker.name === venue_name) {\n          markerObj = marker;\n          markerEl = document.getElementById(index);\n        }\n      })\n    }\n    // add open-marker class to DOM marker\n    markerEl.classList.toggle('open-marker');\n    // zoom in and center map on marker location\n    this.zoomTo(markerObj);\n  }\n\n  /**\n   * Removes any 'open' styling from markers\n   */\n  rmMarkerStyle() {\n    const open_marker = document.querySelector('.open-marker');\n    if (open_marker != null) {\n      open_marker.classList.toggle('open-marker');\n    }\n    return;\n  }\n\n  /**\n   * Removes any open styling among list items\n   */\n  rmMenuItemStyle() {\n    let item_open = document.querySelector('.open');\n    if (item_open != null) {\n      item_open.classList.toggle('open');\n    }\n    return item_open;\n  }\n\n  /**\n   * Handles menu item click and simulates map marker click\n   * @param {string} venue_name\n   * @param event - Empty by default to allow for a simulated click event.\n   * \n   */\n  itemClick(venue_name, event = '') {\n    // remove any already 'open' menu item styles\n    this.rmMenuItemStyle();\n    // if the menu item was actually clicked, then toggle its style and simulate its corresponding map marker click\n    // include event.key 'Spacebar' for older browsers\n    if (event.type === 'click' || event.key === ' ' || event.key === 'Spacebar') {\n      let eventTarget = event.target;\n      eventTarget.classList.toggle('open');\n      this.markerClick(venue_name, '');\n    } else if (event === '') {\n      // otherwise loop through to find the DOM element with inner HTML matching the venue name and toggle its style\n      const list = this.listItemsRef.current.childNodes;\n      for (let item in list) {\n        if (list[item].textContent === venue_name) {\n          list[item].classList.toggle('open');\n        }\n      }\n    }\n  }\n\n  /**\n   * Resets map and list with filtered results on menu selection\n   * @param event - mouse or keyboard event\n   */\n  onSelection(event) {\n    this.rmMarkerStyle();\n    this.rmMenuItemStyle();\n    this.setState({\n      selection: event.target.value\n    })\n    this.recenterMap();\n  }\n\n\n  /**\n   * When App component mounts:\n      * initialize map object\n      * fetch forward geocoded locations of venues\n      * create marker objects\n   */\n  componentDidMount() {\n    // get center point and zoom values stored in state\n    const { lng, lat, zoom } = this.state;\n    // initialize map object\n    this.map = new mapboxgl.Map({\n      container: 'map',\n      style: 'mapbox://styles/mapbox/light-v9',\n      center: [lng, lat],\n      zoom\n    })\n    .on('data', () => {\n        this.setState({\n          error: false\n        })\n    })\n    .on('error', (error) => {\n      console.log(error);\n      this.setState({\n        error: true\n      })\n    });\n    // create geocoding client\n    const geocodingClient = mbxGeocoding({ accessToken: mapboxgl.accessToken });\n    // initialize an array to store promises for geocoded addresses\n    let promises = [];\n    // forward geocode each coffee place address\n    CoffeePlaces.coffeePlaces.forEach((place) => {\n      // store each promise for feature object containing geocoded address\n      let eachPromise = (\n        geocodingClient.forwardGeocode({\n          query: place.address,\n          limit: 1\n        })\n          .send()\n          .then((response) => {\n            if (response != null && response.error == null) {\n              // store feature object\n              const feature = response.body.features[0];\n              // add title, description, and comedian properties\n              feature.properties = {\n                title: place.name,\n                description: place.type,\n                comedian: place.comedian\n              }\n              return feature;\n            } else {\n              return place.name;\n            }\n          })\n          .catch((error) => {\n            console.log(error);\n            return place.name;\n          })\n      )\n      // store each promise in promises array\n      promises.push(eachPromise);\n    })\n    // create array to store markers\n    let markers = [];\n    // return promises\n    Promise.all(promises).then((promises) => {\n      let i = 0;\n      // create a marker instance for each feature object\n      promises.forEach((feature) => {\n        // if promise resolved, pass custom marker DOM element attached to marker reference at index\n        if (typeof feature === 'object') {\n          let marker = new mapboxgl.Marker(this.markerRef[i].current)\n          .setLngLat(feature.geometry.coordinates)\n          // create object containing marker instance and venue data\n          let markerData = {\n            name: feature.properties.title,\n            category: feature.properties.description,\n            address: feature.place_name,\n            comedian: feature.properties.comedian,\n            marker: marker,\n            vID: '',\n            details: ''\n          }\n          // push markerData to array of markers\n          markers.push(markerData);\n        // alert user if promise was rejected\n        } else {\n          alert(`There was a problem loading data for ${feature}.`)\n        }\n        \n        i++;\n      })\n      // store array of markers in state\n      this.setState({\n        markers: markers\n      })\n    });\n  }\n\n  /**\n   * When App component updates:\n      * fetch venue details (if they have not already been fetched or are not currently being fetched)\n      * update markers in state\n   */\n  \n  componentDidUpdate() {\n    if (this.state.details === '') {\n      // update state of details to prevent repeated fetch calls while in progress\n      this.setState({\n        details: 'fetching'\n      })\n      console.log('fetching');\n      let proms = [];\n      let markers = this.state.markers;\n      let rejected = 0;\n      markers.forEach((marker) => {\n        // fetch data for venue using Foursquare's Places API search\n        let prom = (\n          fetch(`https://api.foursquare.com/v2/venues/search?client_id=${CLIENT_ID}&client_secret=${CLIENT_SECRET}&v=20180323&limit=2&ll=${marker.marker._lngLat.lat},${marker.marker._lngLat.lng}&query=${marker.name}`)\n            .then((response) => {\n              return response.json();\n            })\n            .then((myJson) => {\n              //console.log(myJson);\n              let venueID = null;\n              myJson.response.venues.map((venue) => {\n                if (venue.name === marker.name) {\n                  venueID = venue.id;\n                }\n                return venueID;\n              })\n              return venueID;\n            })\n            .catch((error) => {\n              console.log(error);\n              rejected += 1;\n              return null;\n            })\n        )\n        proms.push(prom);\n      })\n\n      Promise.all(proms).then((proms) => {\n        markers.forEach((marker, index) => {\n          // fetch details using proms[index], which should be the venue id\n          // then set the marker.details to the response\n          if (proms[index] != null) {\n            fetch(`https://api.foursquare.com/v2/venues/${proms[index]}?client_id=${CLIENT_ID}&client_secret=${CLIENT_SECRET}&v=20180923`)\n            .then((response) => {\n              return response.json();\n            })\n            .then((myJson) => {\n              marker.details = myJson;\n            })\n          }\n        })\n        // update array of markers in state\n        this.setState({\n          markers: markers\n        })\n        // update state of details when all fetching is complete\n        this.setState({\n          details: 'fetched'\n        })\n        console.log('fetched');\n        // if any promises were rejected, alert the user\n        if (rejected > 0) {\n          if (rejected === 1) {\n            rejected = `${rejected} venue`;\n          } else {\n            rejected = `${rejected} venues`;\n          }\n          alert(`There was a problem loading details for ${rejected}.`);\n        }\n      })\n    }\n  }\n\n  render() {\n    // filter and add markers to map\n    this.state.markers.forEach((markerObj) => {\n      if (this.state.selection !== 'All') {\n        if (this.state.selection === markerObj.category) {\n          markerObj.marker.addTo(this.map);\n        } else {\n          markerObj.marker.remove();\n        }\n      } else {\n        markerObj.marker.addTo(this.map);\n      }\n    })\n    // initialize popup and create Popup component for a venue if its marker is open\n    let popupComp = '';\n    if (this.state.open !== '') {\n      let mObj = this.state.open;\n      popupComp = (\n        <Popup className='my-popup' venue={mObj} buttonRef={this.buttonEl} close={this.closePopup} />\n      )\n    }\n    // initialize counter for creating marker elements\n    let n = 0;\n\n    // alert user if map is unable to load\n    let alertDiv = '';\n    if (this.state.error) {\n      alertDiv = (<div className='alert'>There was a problem loading the map</div>)\n    }\n\n    return (\n      <Fragment>\n        {alertDiv}\n        <section role='presentation' aria-label=\"Map view of listed venues\" id=\"map\">\n        </section>\n        <section aria-label=\"Filterable list of venues\" className='sidebar pad2'>\n          <Select selection={this.state.selection} onSelection={this.onSelection}></Select>\n          <List listRef={this.listItemsRef} selection={this.state.selection} itemClick={this.itemClick} markers={this.state.markers.length !== 0 ? this.state.markers : []}></List>\n          <footer className='app-info'>\n            <p><i>This web app was built with React and uses Mapbox GL JS and Foursquare’s Places APIs.</i></p>\n          </footer>\n        </section>\n        <section id='popup' aria-live='polite' aria-label='Venue details'>\n          {popupComp}\n        </section>\n        {\n          // create DOM element with ref for each marker to be rendered\n          this.markerRef.map((reference) => {\n            n++;\n            return (\n              <div className='marker' id={n - 1} key={n} ref={reference} onClick={(e) => this.markerClick('', e)} />\n            )\n          })\n        }\n      </Fragment>\n    );\n    \n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n      alert('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}